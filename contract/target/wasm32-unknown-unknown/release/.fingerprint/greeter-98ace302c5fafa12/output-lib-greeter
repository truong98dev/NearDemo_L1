{"message":"expected value, found module `self`","code":{"code":"E0424","explanation":"The `self` keyword was used inside of an associated function without a \"`self`\nreceiver\" parameter.\n\nErroneous code example:\n\n```compile_fail,E0424\nstruct Foo;\n\nimpl Foo {\n    // `bar` is a method, because it has a receiver parameter.\n    fn bar(&self) {}\n\n    // `foo` is not a method, because it has no receiver parameter.\n    fn foo() {\n        self.bar(); // error: `self` value is a keyword only available in\n                    //        methods with a `self` parameter\n    }\n}\n```\n\nThe `self` keyword can only be used inside methods, which are associated\nfunctions (functions defined inside of a `trait` or `impl` block) that have a\n`self` receiver as its first parameter, like `self`, `&self`, `&mut self` or\n`self: &mut Pin<Self>` (this last one is an example of an [\"arbitrary `self`\ntype\"](https://github.com/rust-lang/rust/issues/44874)).\n\nCheck if the associated function's parameter list should have contained a `self`\nreceiver for it to be a method, and add it if so. Example:\n\n```\nstruct Foo;\n\nimpl Foo {\n    fn bar(&self) {}\n\n    fn foo(self) { // `foo` is now a method.\n        self.bar(); // ok!\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/internal.rs","byte_start":108,"byte_end":112,"line_start":7,"line_end":7,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"            &self.owner_id,","highlight_start":14,"highlight_end":18}],"label":"`self` value is a keyword only available in methods with a `self` parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/internal.rs","byte_start":58,"byte_end":70,"line_start":5,"line_end":5,"column_start":12,"column_end":24,"is_primary":false,"text":[{"text":"    pub fn assert_owner() {","highlight_start":12,"highlight_end":24}],"label":"this function doesn't have a `self` parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add a `self` receiver parameter to make the associated `fn` a method","code":null,"level":"help","spans":[{"file_name":"src/internal.rs","byte_start":71,"byte_end":71,"line_start":5,"line_end":5,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn assert_owner() {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"&self","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0424]\u001b[0m\u001b[0m\u001b[1m: expected value, found module `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/internal.rs:7:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn assert_owner() {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis function doesn't have a `self` parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        assert_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            &self.owner_id,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`self` value is a keyword only available in methods with a `self` parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add a `self` receiver parameter to make the associated `fn` a method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn assert_owner(\u001b[0m\u001b[0m\u001b[38;5;10m&self\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\n"}
{"message":"cannot find value `item` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3238,"byte_end":3242,"line_start":103,"line_end":103,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"            .map(item.percent)","highlight_start":18,"highlight_end":22}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `item` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:103:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            .map(item.percent)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"unused import: `std::thread::AccessError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":31,"byte_end":55,"line_start":2,"line_end":2,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use std::thread::AccessError;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":27,"byte_end":56,"line_start":2,"line_end":2,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"use std::thread::AccessError;","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::thread::AccessError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::thread::AccessError;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `near_sdk::serde_json::json`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":109,"byte_end":135,"line_start":5,"line_end":5,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use near_sdk::serde_json::json;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":105,"byte_end":136,"line_start":5,"line_end":5,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use near_sdk::serde_json::json;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `near_sdk::serde_json::json`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::serde_json::json;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `WrappedBalance`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":164,"byte_end":178,"line_start":6,"line_end":6,"column_start":28,"column_end":42,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{WrappedBalance, WrappedDuration, ValidAccountId, U128};","highlight_start":28,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":164,"byte_end":180,"line_start":6,"line_end":6,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"use near_sdk::json_types::{WrappedBalance, WrappedDuration, ValidAccountId, U128};","highlight_start":28,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `WrappedBalance`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse near_sdk::json_types::{WrappedBalance, WrappedDuration, ValidAccountId, U128};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Duration`, `Gas`, `PanicOnDefault`, `PromiseResult`, `Promise`, `Timestamp`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":610,"byte_end":619,"line_start":11,"line_end":11,"column_start":76,"column_end":85,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PromiseOrValue, Timestamp, Duration, Gas, Promise, PromiseResult, PanicOnDefault};","highlight_start":76,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":621,"byte_end":629,"line_start":11,"line_end":11,"column_start":87,"column_end":95,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PromiseOrValue, Timestamp, Duration, Gas, Promise, PromiseResult, PanicOnDefault};","highlight_start":87,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":631,"byte_end":634,"line_start":11,"line_end":11,"column_start":97,"column_end":100,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PromiseOrValue, Timestamp, Duration, Gas, Promise, PromiseResult, PanicOnDefault};","highlight_start":97,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":636,"byte_end":643,"line_start":11,"line_end":11,"column_start":102,"column_end":109,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PromiseOrValue, Timestamp, Duration, Gas, Promise, PromiseResult, PanicOnDefault};","highlight_start":102,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":645,"byte_end":658,"line_start":11,"line_end":11,"column_start":111,"column_end":124,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PromiseOrValue, Timestamp, Duration, Gas, Promise, PromiseResult, PanicOnDefault};","highlight_start":111,"highlight_end":124}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":660,"byte_end":674,"line_start":11,"line_end":11,"column_start":126,"column_end":140,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PromiseOrValue, Timestamp, Duration, Gas, Promise, PromiseResult, PanicOnDefault};","highlight_start":126,"highlight_end":140}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":608,"byte_end":674,"line_start":11,"line_end":11,"column_start":74,"column_end":140,"is_primary":true,"text":[{"text":"use near_sdk::{env, log, near_bindgen, AccountId, Balance, PromiseOrValue, Timestamp, Duration, Gas, Promise, PromiseResult, PanicOnDefault};","highlight_start":74,"highlight_end":140}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Duration`, `Gas`, `PanicOnDefault`, `PromiseResult`, `Promise`, `Timestamp`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:11:76\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0mccountId, Balance, PromiseOrValue, Timestamp, Duration, Gas, Promise, PromiseResult, PanicOnDefault};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::internal::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":709,"byte_end":727,"line_start":15,"line_end":15,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use crate::internal::*;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":705,"byte_end":728,"line_start":15,"line_end":15,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use crate::internal::*;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::internal::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::internal::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `map` exists for struct `Vector<ShareHolder>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3234,"byte_end":3237,"line_start":103,"line_end":103,"column_start":14,"column_end":17,"is_primary":true,"text":[{"text":"            .map(item.percent)","highlight_start":14,"highlight_end":17}],"label":"method cannot be called on `Vector<ShareHolder>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/collections/vector.rs","byte_start":914,"byte_end":934,"line_start":19,"line_end":19,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub struct Vector<T> {","highlight_start":1,"highlight_end":21}],"label":"doesn't satisfy `Vector<ShareHolder>: Iterator`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vector<ShareHolder>: Iterator`\nwhich is required by `&mut Vector<ShareHolder>: Iterator`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `map` exists for struct `Vector<ShareHolder>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:103:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            .map(item.percent)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Vector<ShareHolder>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/collections/vector.rs:19:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct Vector<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Vector<ShareHolder>: Iterator`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vector<ShareHolder>: Iterator`\u001b[0m\n\u001b[0m            which is required by `&mut Vector<ShareHolder>: Iterator`\u001b[0m\n\n"}
{"message":"cannot subtract `f64` from `{integer}`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3285,"byte_end":3286,"line_start":105,"line_end":105,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"        (100 - share_holder_total_percent) / 100 * self.token.total_supply","highlight_start":14,"highlight_end":15}],"label":"no implementation for `{integer} - f64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Sub<f64>` is not implemented for `{integer}`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: cannot subtract `f64` from `{integer}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:105:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        (100 - share_holder_total_percent) / 100 * self.token.total_supply\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `{integer} - f64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sub<f64>` is not implemented for `{integer}`\u001b[0m\n\n"}
{"message":"the method `collect` exists for struct `UnorderedMap<std::string::String, u128>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3600,"byte_end":3607,"line_start":118,"line_end":118,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"            .collect()","highlight_start":14,"highlight_end":21}],"label":"method cannot be called on `UnorderedMap<std::string::String, u128>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/collections/unordered_map.rs","byte_start":804,"byte_end":833,"line_start":15,"line_end":15,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub struct UnorderedMap<K, V> {","highlight_start":1,"highlight_end":30}],"label":"doesn't satisfy `UnorderedMap<std::string::String, u128>: Iterator`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`UnorderedMap<std::string::String, u128>: Iterator`\nwhich is required by `&mut UnorderedMap<std::string::String, u128>: Iterator`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `collect` exists for struct `UnorderedMap<std::string::String, u128>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:118:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            .collect()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `UnorderedMap<std::string::String, u128>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/collections/unordered_map.rs:15:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct UnorderedMap<K, V> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `UnorderedMap<std::string::String, u128>: Iterator`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `UnorderedMap<std::string::String, u128>: Iterator`\u001b[0m\n\u001b[0m            which is required by `&mut UnorderedMap<std::string::String, u128>: Iterator`\u001b[0m\n\n"}
{"message":"the trait bound `Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1499,"byte_end":1514,"line_start":47,"line_end":47,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":"the trait `Default` is not implemented for `Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1499,"byte_end":1514,"line_start":47,"line_end":47,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Contract: Default` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:47:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `Contract`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `Default` is not implemented for `Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":384,"byte_end":399,"line_start":9,"line_end":9,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3903,"byte_end":3988,"line_start":130,"line_end":130,"column_start":1,"column_end":86,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Contract: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:130:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `Default` is not implemented for `Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":1363,"byte_end":1378,"line_start":41,"line_end":41,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3903,"byte_end":3988,"line_start":130,"line_end":130,"column_start":1,"column_end":86,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_core!(Contract, token, on_tokens_burned);","highlight_start":1,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_core!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":129,"byte_end":2066,"line_start":4,"line_end":60,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_core {","highlight_start":1,"highlight_end":40},{"text":"    ($contract: ident, $token: ident $(, $on_tokens_burned_fn:ident)?) => {","highlight_start":1,"highlight_end":76},{"text":"        use $crate::fungible_token::core::FungibleTokenCore;","highlight_start":1,"highlight_end":61},{"text":"        use $crate::fungible_token::resolver::FungibleTokenResolver;","highlight_start":1,"highlight_end":69},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenCore for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer(","highlight_start":1,"highlight_end":28},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                self.$token.ft_transfer(receiver_id, amount, memo)","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_transfer_call(","highlight_start":1,"highlight_end":33},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"                memo: Option<String>,","highlight_start":1,"highlight_end":38},{"text":"                msg: String,","highlight_start":1,"highlight_end":29},{"text":"            ) -> PromiseOrValue<U128> {","highlight_start":1,"highlight_end":40},{"text":"                self.$token.ft_transfer_call(receiver_id, amount, memo, msg)","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_total_supply(&self) -> U128 {","highlight_start":1,"highlight_end":48},{"text":"                self.$token.ft_total_supply()","highlight_start":1,"highlight_end":46},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn ft_balance_of(&self, account_id: ValidAccountId) -> U128 {","highlight_start":1,"highlight_end":74},{"text":"                self.$token.ft_balance_of(account_id)","highlight_start":1,"highlight_end":54},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl FungibleTokenResolver for $contract {","highlight_start":1,"highlight_end":51},{"text":"            #[private]","highlight_start":1,"highlight_end":23},{"text":"            fn ft_resolve_transfer(","highlight_start":1,"highlight_end":36},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                sender_id: ValidAccountId,","highlight_start":1,"highlight_end":43},{"text":"                receiver_id: ValidAccountId,","highlight_start":1,"highlight_end":45},{"text":"                amount: U128,","highlight_start":1,"highlight_end":30},{"text":"            ) -> U128 {","highlight_start":1,"highlight_end":24},{"text":"                let sender_id: AccountId = sender_id.into();","highlight_start":1,"highlight_end":61},{"text":"                let (used_amount, burned_amount) =","highlight_start":1,"highlight_end":51},{"text":"                    self.$token.internal_ft_resolve_transfer(&sender_id, receiver_id, amount);","highlight_start":1,"highlight_end":95},{"text":"                if burned_amount > 0 {","highlight_start":1,"highlight_end":39},{"text":"                    $(self.$on_tokens_burned_fn(sender_id, burned_amount);)?","highlight_start":1,"highlight_end":77},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                used_amount.into()","highlight_start":1,"highlight_end":35},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Contract: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:130:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_core!(Contract, token, on_tokens_burned);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":"the trait `Default` is not implemented for `Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2684,"byte_end":2699,"line_start":74,"line_end":74,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        #[near_bindgen]","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":3990,"byte_end":4079,"line_start":131,"line_end":131,"column_start":1,"column_end":90,"is_primary":false,"text":[{"text":"near_contract_standards::impl_fungible_token_storage!(Contract, token, on_account_closed);","highlight_start":1,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"near_contract_standards::impl_fungible_token_storage!","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-contract-standards-3.2.0/src/fungible_token/macros.rs","byte_start":2434,"byte_end":3983,"line_start":68,"line_end":110,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_fungible_token_storage {","highlight_start":1,"highlight_end":43},{"text":"    ($contract: ident, $token: ident $(, $on_account_closed_fn:ident)?) => {","highlight_start":1,"highlight_end":77},{"text":"        use $crate::storage_management::{","highlight_start":1,"highlight_end":42},{"text":"            StorageManagement, StorageBalance, StorageBalanceBounds","highlight_start":1,"highlight_end":68},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[near_bindgen]","highlight_start":1,"highlight_end":24},{"text":"        impl StorageManagement for $contract {","highlight_start":1,"highlight_end":47},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_deposit(","highlight_start":1,"highlight_end":32},{"text":"                &mut self,","highlight_start":1,"highlight_end":27},{"text":"                account_id: Option<ValidAccountId>,","highlight_start":1,"highlight_end":52},{"text":"                registration_only: Option<bool>,","highlight_start":1,"highlight_end":49},{"text":"            ) -> StorageBalance {","highlight_start":1,"highlight_end":34},{"text":"                self.$token.storage_deposit(account_id, registration_only)","highlight_start":1,"highlight_end":75},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_withdraw(&mut self, amount: Option<U128>) -> StorageBalance {","highlight_start":1,"highlight_end":85},{"text":"                self.$token.storage_withdraw(amount)","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[payable]","highlight_start":1,"highlight_end":23},{"text":"            fn storage_unregister(&mut self, force: Option<bool>) -> bool {","highlight_start":1,"highlight_end":76},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                if let Some((account_id, balance)) = self.$token.internal_storage_unregister(force) {","highlight_start":1,"highlight_end":102},{"text":"                    $(self.$on_account_closed_fn(account_id, balance);)?","highlight_start":1,"highlight_end":73},{"text":"                    true","highlight_start":1,"highlight_end":25},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    false","highlight_start":1,"highlight_end":26},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_bounds(&self) -> StorageBalanceBounds {","highlight_start":1,"highlight_end":71},{"text":"                self.$token.storage_balance_bounds()","highlight_start":1,"highlight_end":53},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn storage_balance_of(&self, account_id: ValidAccountId) -> Option<StorageBalance> {","highlight_start":1,"highlight_end":97},{"text":"                self.$token.storage_balance_of(account_id)","highlight_start":1,"highlight_end":59},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Contract: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:131:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mnear_contract_standards::impl_fungible_token_storage!(Contract, token, on_account_closed);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Contract: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4082,"byte_end":4097,"line_start":133,"line_end":133,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":"the trait `Default` is not implemented for `Contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":4082,"byte_end":4097,"line_start":133,"line_end":133,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[near_bindgen]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[near_bindgen]","def_site_span":{"file_name":"/Users/trietnguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-macros-3.1.0/src/lib.rs","byte_start":255,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":74,"is_primary":false,"text":[{"text":"pub fn near_bindgen(_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Contract: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:133:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[near_bindgen]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `Contract`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `near_bindgen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 10 previous errors; 5 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 10 previous errors; 5 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0424, E0425, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0424, E0425, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
